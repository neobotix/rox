<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rox">

  <xacro:macro name="gazebo_plugins">
    <gazebo reference="lidar_1_link">
      <sensor name="lidar_1_sensor" type="gpu_lidar">
        <always_on>true</always_on>
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.48</min_angle>
              <max_angle>1.48</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.05</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                    reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <topic>scan</topic>
        <!-- Set output to sensor_msgs/LaserScan to get same output type as gazebo_ros_laser -->
        <output_type>sensor_msgs/LaserScan</output_type>
        <gz_frame_id>lidar_1_link</gz_frame_id>
      </sensor>
    </gazebo>

    <gazebo reference="lidar_2_link">
      <sensor name="lidar_2_sensor" type="gpu_lidar">
        <always_on>true</always_on>
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.48</min_angle>
              <max_angle>1.48</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>30.0</max>
            <resolution>0.05</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                    achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                    stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                    reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <topic>scan2</topic>
        <!-- Set output to sensor_msgs/LaserScan to get same output type as gazebo_ros_laser -->
        <output_type>sensor_msgs/LaserScan</output_type>
        <gz_frame_id>lidar_2_link</gz_frame_id>
      </sensor>
    </gazebo>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <gz_frame_id>imu_link</gz_frame_id>
            <update_rate>50</update_rate>
            <visualize>false</visualize>
            <topic>imu</topic>
            <always_on>true</always_on>
        </sensor>
    </gazebo>

    <gazebo>
      <plugin filename="gz-sim-odometry-publisher-system"
          name="gz::sim::systems::OdometryPublisher">
          <odom_frame>odom</odom_frame> 
          <odom_covariance_topic>odom</odom_covariance_topic>
          <tf_topic>tf</tf_topic>
          <robot_base_frame>base_link</robot_base_frame>
          <odom_publish_frequency>100</odom_publish_frequency>
      </plugin>

      <plugin filename="gz-sim-imu-system"
          name="gz::sim::systems::Imu">
      </plugin>

      <!-- For ArgoDrive platforms -->
      <xacro:if value="${rox_typ == 'argo'}">
        <plugin filename="gz-sim-velocity-control-system"
            name="gz::sim::systems::VelocityControl">
            <topic>cmd_vel</topic>
        </plugin>
      </xacro:if>

      <!-- DiffDrive control for trike and diff -->
      <xacro:if value="${rox_typ == 'diff' or rox_typ == 'trike'}">
        <plugin filename="gz-sim-diff-drive-system"
          name="gz::sim::systems::DiffDrive">
          <left_joint>wheel_left_joint</left_joint>
          <right_joint>wheel_right_joint</right_joint>
          <wheel_separation>0.555</wheel_separation>
          <wheel_radius>0.075</wheel_radius>
          <max_linear_acceleration>1</max_linear_acceleration>
          <min_linear_acceleration>-1</min_linear_acceleration>
          <max_angular_acceleration>10.0</max_angular_acceleration>
          <min_angular_acceleration>-10.0</min_angular_acceleration>
          <max_linear_velocity>2.0</max_linear_velocity>
          <min_linear_velocity>-2.0</min_linear_velocity>
          <max_angular_velocity>10.0</max_angular_velocity>
          <min_angular_velocity>-10.0</min_angular_velocity>
          <topic>/cmd_vel</topic>
          <odom_topic>/odom</odom_topic>
          <tf_topic>/tf</tf_topic>
          <odom_publish_frequency>50</odom_publish_frequency>
        </plugin>

        <plugin
          filename="gz-sim-joint-state-publisher-system"
          name="gz::sim::systems::JointStatePublisher">
          <joint_name>wheel_left_joint</joint_name>
          <joint_name>wheel_right_joint</joint_name>
          <topic>joint_states</topic>
          <update_rate>30</update_rate>
        </plugin>

      </xacro:if>

      <plugin filename="gz-sim-sensors-system"
        name="gz::sim::systems::Sensors">
      </plugin>
      
    </gazebo>

  </xacro:macro>
  
</robot>
